<!doctype html>
<html lang="ru">
<head>
<meta charset="utf-8" />
<meta name="viewport" content="width=device-width,initial-scale=1" />
<title>Градиентный ник — Minecraft</title>
<!-- Пиксельный Minecraft-шрифт -->
<link href="https://fonts.googleapis.com/css2?family=Press+Start+2P&display=swap" rel="stylesheet">
<style>
  :root{ --bg:#0f1221; --card:#151935; --text:#e7e9ff; --muted:#a7afd9; }
  *{box-sizing:border-box}
  body{
    margin:0; min-height:100vh;
    display:flex; align-items:center; justify-content:center;
    background:radial-gradient(1200px 600px at 10% 10%, #1a2050 0%, #0f1221 60%) no-repeat var(--bg);
    font-family: 'Press Start 2P', monospace; /* ← теперь Minecraft стиль */
    color:var(--text); padding:24px;
  }
  .app{width:min(100%,1000px)}
  .grid{display:grid; gap:16px; grid-template-columns: 1.1fr .9fr}
  @media (max-width:900px){ .grid{grid-template-columns:1fr} }
  .card{background:linear-gradient(180deg,rgba(255,255,255,.04),rgba(255,255,255,.02));
        border:1px solid rgba(255,255,255,.08); border-radius:14px; padding:18px; backdrop-filter: blur(6px)}
  label{font-size:13px; color:var(--muted); display:block; margin-bottom:6px}
  input[type="text"],select,input[type="number"],input[type="range"]{
    width:100%; padding:10px 12px; border-radius:10px; border:1px solid rgba(255,255,255,.12);
    background:#0f132b; color:#e7e9ff; outline:none; font-size:14px;
  }
  .row{display:flex; gap:12px; align-items:center}
  .row>*{flex:1}
  .btns{display:flex; flex-wrap:wrap; gap:10px; margin-top:10px}
  button{border:1px solid rgba(255,255,255,.14); background:#10163a; color:#fff; padding:10px 14px; border-radius:10px; cursor:pointer; font-weight:600}
  .out{font-family:monospace; background:#0f132b; border:1px dashed rgba(255,255,255,.14); border-radius:10px; padding:10px; font-size:13px; word-break:break-all}
  .preview{display:flex; align-items:center; justify-content:center; min-height:200px; border-radius:12px; background:var(--card); overflow:auto}
</style>
</head>
<body>
<div class="app">
  <h1>Градиентный ник (Minecraft)</h1>

  <div class="grid">
    <section class="card">
      <label for="nick">Никнейм</label>
      <input id="nick" type="text" value="StevePro" placeholder="Например, StevePro" />

      <div class="row" style="margin-top:10px">
        <div><label for="c1">Цвет 1</label><input id="c1" type="color" value="#6ea8fe"></div>
        <div><label for="c2">Цвет 2</label><input id="c2" type="color" value="#c77dff"></div>
        <div><label for="c3">Цвет 3</label><input id="c3" type="color" value="#ffb86b"></div>
      </div>

      <div class="row" style="margin-top:10px">
        <div><label for="size">Размер (px)</label><input id="size" type="number" min="16" max="220" value="96"></div>
        <div><label for="stroke">Обводка (px)</label><input id="stroke" type="number" min="0" max="8" value="0"></div>
      </div>
    </section>

    <section class="card">
      <div class="preview">
        <!-- SVG-превью -->
        <svg id="svg" xmlns="http://www.w3.org/2000/svg" width="100%" height="220" viewBox="0 0 1000 220" preserveAspectRatio="xMidYMid meet">
          <defs>
            <!-- Градиент слева направо -->
            <linearGradient id="grad" x1="0%" y1="0%" x2="100%" y2="0%">
              <stop id="s1" offset="0%" stop-color="#6ea8fe"/>
              <stop id="s2" offset="50%" stop-color="#c77dff"/>
              <stop id="s3" offset="100%" stop-color="#ffb86b"/>
            </linearGradient>
          </defs>
          <text id="svgText" x="50%" y="50%" dominant-baseline="middle" text-anchor="middle"
                font-size="96" font-weight="800" fill="url(#grad)">StevePro</text>
        </svg>
      </div>

      <div class="btns">
        <button id="copyMini">Скопировать MiniMessage</button>
        <button id="copyLegacy">Скопировать §x-hex</button>
      </div>
    </section>
  </div>

  <div class="grid" style="grid-template-columns:1fr 1fr; margin-top:16px">
    <section class="card"><label>MiniMessage</label><div id="miniOut" class="out"></div></section>
    <section class="card"><label>§x-hex</label><div id="legacyOut" class="out"></div></section>
  </div>
</div>

<script>
const $=s=>document.querySelector(s);
const nick=$('#nick'),c1=$('#c1'),c2=$('#c2'),c3=$('#c3'),size=$('#size'),stroke=$('#stroke');
const svgText=$('#svgText'),s1=$('#s1'),s2=$('#s2'),s3=$('#s3'),miniOut=$('#miniOut'),legacyOut=$('#legacyOut');

function hexToRgb(h){const m=h.replace('#','');return{r:parseInt(m.slice(0,2),16),g:parseInt(m.slice(2,4),16),b:parseInt(m.slice(4,6),16)}}
function rgbToHex({r,g,b}){return '#'+[r,g,b].map(v=>v.toString(16).padStart(2,'0')).join('').toUpperCase()}
function lerp(a,b,t){return a+(b-a)*t}
function lerpRgb(a,b,t){return {r:Math.round(lerp(a.r,b.r,t)),g:Math.round(lerp(a.g,b.g,t)),b:Math.round(lerp(a.b,b.b,t))}}
function splitChars(str){return Array.from(str)}
function threeColorGradientColorAt(t,h1,h2,h3){const A=hexToRgb(h1),B=hexToRgb(h2),C=hexToRgb(h3);if(t<=0.5)return rgbToHex(lerpRgb(A,B,t/0.5));return rgbToHex(lerpRgb(B,C,(t-0.5)/0.5))}
function buildLegacyPerChar(str,h1,h2,h3){const chars=splitChars(str).filter(ch=>ch!=='\n');const N=Math.max(1,chars.length-1);let out='',idx=0;for(const ch of splitChars(str)){if(ch==='\n'){out+='\n';continue;}const t=N===0?0:idx/N;const hex=threeColorGradientColorAt(t,h1,h2,h3);const seq='§x'+hex.slice(1).split('').map(n=>'§'+n).join('');out+=seq+ch;idx++;}return out}

function update(){
  const text=nick.value||' ';
  const h1=c1.value.toUpperCase(),h2=c2.value.toUpperCase(),h3=c3.value.toUpperCase();
  svgText.textContent=text;
  svgText.setAttribute('font-size',Math.max(16,Math.min(220,parseInt(size.value)||96)));
  svgText.setAttribute('style',`font-family:'Press Start 2P', monospace;font-weight:800`);
  const sw=Math.max(0,Math.min(8,parseInt(stroke.value)||0));
  if(sw){svgText.setAttribute('stroke','black');svgText.setAttribute('stroke-width',sw);svgText.setAttribute('paint-order','stroke fill');}
  else{svgText.removeAttribute('stroke');svgText.removeAttribute('stroke-width');}
  s1.setAttribute('stop-color',h1);s2.setAttribute('stop-color',h2);s3.setAttribute('stop-color',h3);
  miniOut.textContent=`<gradient:${h1}:${h2}:${h3}>${text}</gradient>`;
  legacyOut.textContent=buildLegacyPerChar(text,h1,h2,h3);
}
[nick,c1,c2,c3,size,stroke].forEach(el=>el.addEventListener('input',update));
update();

$('#copyMini').addEventListener('click',()=>navigator.clipboard.writeText(miniOut.textContent));
$('#copyLegacy').addEventListener('click',()=>navigator.clipboard.writeText(legacyOut.textContent));
</script>
</body>
</html>
